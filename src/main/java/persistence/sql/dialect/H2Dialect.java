package persistence.sql.dialect;

import jakarta.persistence.GenerationType;
import persistence.sql.ddl.KeyType;
import persistence.sql.extractor.DataType;

import java.util.Map;

public class H2Dialect implements Dialect {
    private final Map<DataType, String> mappingTable = Map.of(
        DataType.LONG, "BIGINT",
        DataType.STRING, "VARCHAR",
        DataType.INT, "INTEGER"
    );

    private final Map<GenerationType, String> generationTypeMappingTable = Map.of(
        GenerationType.IDENTITY, "generated by default as identity"
    );

    private final Map<KeyType, String> keyTypeMappingTable = Map.of(
        KeyType.PRIMARY, "PRIMARY",
        KeyType.UNIQUE, "UNIQUE"
    );

    @Override
    public String mapDataType(DataType type) {
        try {
            return mappingTable.get(type);
        } catch (NullPointerException e) {
            throw new IllegalArgumentException("지원하지 않는 타입입니다.");
        }
    }

    @Override
    public String mapGenerationType(GenerationType strategy) {
        try {
            return generationTypeMappingTable.get(strategy);
        } catch (NullPointerException e) {
            throw new IllegalArgumentException("지원하지 않는 전략입니다.");
        }
    }

    @Override
    public String mapKeyType(KeyType keyType) {
        try {
            return keyTypeMappingTable.get(keyType);
        } catch (NullPointerException e) {
            throw new IllegalArgumentException("지원하지 않는 키 타입입니다.");
        }
    }
}
